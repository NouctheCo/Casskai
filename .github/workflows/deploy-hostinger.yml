name: Deploy to Hostinger

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Debug secrets availability
      run: |
        echo "Checking secrets availability:"
        echo "VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL != '' && 'SET' || 'NOT SET' }}"
        echo "VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY != '' && 'SET' || 'NOT SET' }}"
        echo "VITE_STRIPE_PUBLISHABLE_KEY: ${{ secrets.VITE_STRIPE_PUBLISHABLE_KEY != '' && 'SET' || 'NOT SET' }}"

    - name: Create production .env file
      run: |
        cat > .env << 'EOF'
        # Variables d'environnement pour production
        VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}
        VITE_APP_NAME=CassKai
        VITE_APP_VERSION=1.0.0
        VITE_NODE_ENV=production
        VITE_APP_URL=https://casskai.app
        VITE_API_BASE_URL=https://casskai.app/api
        VITE_STRIPE_PUBLISHABLE_KEY=${{ secrets.VITE_STRIPE_PUBLISHABLE_KEY }}
        EOF
        echo "Generated .env file contents (secrets masked):"
        sed 's/=.*/=***/' .env

    - name: Clear build cache and build application
      run: |
        echo "Clearing all caches..."
        rm -rf node_modules/.cache
        rm -rf dist
        rm -rf .vite
        npm run build

    - name: Create .htaccess for React Router
      run: |
        cat > dist/.htaccess << 'EOF'
        <IfModule mod_rewrite.c>
            RewriteEngine On
            
            # Security headers
            <IfModule mod_headers.c>
                Header always set X-Content-Type-Options nosniff
                Header always set X-Frame-Options DENY
                Header always set X-XSS-Protection "1; mode=block"
                Header always set Referrer-Policy "strict-origin-when-cross-origin"
                Header always set Permissions-Policy "camera=(), microphone=(), geolocation=()"
            </IfModule>
            
            # Cache static assets
            <IfModule mod_expires.c>
                ExpiresActive On
                ExpiresByType text/css "access plus 1 year"
                ExpiresByType application/javascript "access plus 1 year"
                ExpiresByType image/png "access plus 1 year"
                ExpiresByType image/jpg "access plus 1 year"
                ExpiresByType image/jpeg "access plus 1 year"
                ExpiresByType image/gif "access plus 1 year"
                ExpiresByType image/svg+xml "access plus 1 year"
                ExpiresByType font/woff2 "access plus 1 year"
            </IfModule>
            
            # Block access to sensitive files
            <Files ".env*">
                Order deny,allow
                Deny from all
            </Files>
            
            <Files "config*">
                Order deny,allow
                Deny from all
            </Files>
            
            # React Router - redirect all requests to index.html
            RewriteRule ^index\.html$ - [L]
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule . /index.html [L]
        </IfModule>
        EOF

    - name: Deploy to Hostinger via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: 82.25.113.130
        username: u657259520.casskai.app
        password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
        local-dir: ./dist/
        server-dir: /public_html/
        port: 21
        protocol: ftp
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.env*