import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useTranslation } from 'react-i18next';\nimport { useForm } from 'react-hook-form';\nimport { Building, MapPin, Globe, Users, Hash, ExternalLink } from 'lucide-react';\n\nimport { Card, CardContent, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\nimport { Form, FormItem, FormLabel, FormControl, FormMessage } from '../../components/ui/form';\nimport onboardingService from '../../services/onboardingService';\n\nconst CompanyStep = ({ data, onUpdate, onNext }) => {\n  const { t } = useTranslation();\n  const [saving, setSaving] = useState(false);\n  const [markets, setMarkets] = useState([]);\n  const [industries, setIndustries] = useState([]);\n  const [employeeCounts, setEmployeeCounts] = useState([]);\n  const [selectedMarket, setSelectedMarket] = useState(null);\n\n  const form = useForm({\n    defaultValues: {\n      name: data?.companyProfile?.name || '',\n      industry: data?.companyProfile?.industry || '',\n      country: data?.companyProfile?.country || '',\n      city: data?.companyProfile?.city || '',\n      vatNumber: data?.companyProfile?.vatNumber || '',\n      sirenNumber: data?.companyProfile?.sirenNumber || '',\n      website: data?.companyProfile?.website || '',\n      employeeCount: data?.companyProfile?.employeeCount || '',\n      marketId: data?.companyProfile?.marketId || ''\n    }\n  });\n\n  const { watch, setValue } = form;\n  const watchedMarketId = watch('marketId');\n\n  useEffect(() => {\n    // Charger les données des services\n    const loadData = async () => {\n      try {\n        const marketConfigs = onboardingService.getMarketConfigs();\n        const industriesList = onboardingService.getIndustries();\n        const employeeCountsList = onboardingService.getEmployeeCounts();\n        \n        setMarkets(marketConfigs);\n        setIndustries(industriesList);\n        setEmployeeCounts(employeeCountsList);\n      } catch (error) {\n        console.error('Error loading data:', error);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    // Mettre à jour les informations du marché sélectionné\n    if (watchedMarketId) {\n      const market = markets.find(m => m.id === watchedMarketId);\n      setSelectedMarket(market);\n      \n      if (market) {\n        // Auto-compléter les champs basés sur le marché\n        if (market.countries?.length === 1) {\n          setValue('country', market.countries[0]);\n        }\n      }\n    }\n  }, [watchedMarketId, markets, setValue]);\n\n  const handleSubmit = async (formData) => {\n    try {\n      setSaving(true);\n      \n      const companyProfile = {\n        ...formData,\n        marketId: formData.marketId\n      };\n      \n      // Sauvegarder via le service\n      await onboardingService.updateCompanyProfile(data.userId, companyProfile);\n      \n      // Mettre à jour les données locales\n      onUpdate({\n        companyProfile,\n        preferences: {\n          ...data.preferences,\n          ...(selectedMarket && {\n            currency: selectedMarket.defaultCurrency,\n            timezone: selectedMarket.localization.timezone,\n            language: selectedMarket.localization.language.split('-')[0],\n            dateFormat: selectedMarket.localization.dateFormat,\n            numberFormat: selectedMarket.localization.numberFormat,\n            accountingStandard: selectedMarket.accountingStandard\n          })\n        }\n      });\n      \n      onNext();\n    } catch (error) {\n      console.error('Error saving company profile:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: { staggerChildren: 0.1 }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0 }\n  };\n\n  return (\n    <motion.div\n      variants={containerVariants}\n      initial=\"hidden\"\n      animate=\"visible\"\n      className=\"max-w-4xl mx-auto\"\n    >\n      <motion.div variants={itemVariants} className=\"text-center mb-8\">\n        <div className=\"flex justify-center mb-4\">\n          <div className=\"bg-blue-100 dark:bg-blue-900 p-3 rounded-full\">\n            <Building className=\"w-8 h-8 text-blue-600 dark:text-blue-400\" />\n          </div>\n        </div>\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n          {t('onboarding.company.title', 'Profil de votre entreprise')}\n        </h2>\n        <p className=\"text-gray-600 dark:text-gray-300\">\n          {t('onboarding.company.description', 'Configurez les informations de base de votre entreprise')}\n        </p>\n      </motion.div>\n\n      <Form onSubmit={form.handleSubmit(handleSubmit)}>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Informations de base */}\n          <motion.div variants={itemVariants}>\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Building className=\"w-5 h-5\" />\n                  <span>{t('onboarding.company.basicInfo.title', 'Informations de base')}</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <FormItem>\n                  <FormLabel>{t('onboarding.company.basicInfo.name', 'Nom de l\\'entreprise')} *</FormLabel>\n                  <FormControl>\n                    <Input\n                      {...form.register('name', { required: true })}\n                      placeholder={t('onboarding.company.basicInfo.namePlaceholder', 'Mon Entreprise SARL')}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n\n                <FormItem>\n                  <FormLabel>{t('onboarding.company.basicInfo.industry', 'Secteur d\\'activité')} *</FormLabel>\n                  <FormControl>\n                    <select\n                      {...form.register('industry', { required: true })}\n                      className=\"flex h-10 w-full rounded-md border border-input bg-white dark:bg-gray-900 px-3 py-2 text-sm ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\"\n                    >\n                      <option value=\"\">{t('onboarding.company.basicInfo.selectIndustry', 'Sélectionnez un secteur')}</option>\n                      {industries.map((industry) => (\n                        <option key={industry.value} value={industry.value}>\n                          {industry.label}\n                        </option>\n                      ))}\n                    </select>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n\n                <FormItem>\n                  <FormLabel>{t('onboarding.company.basicInfo.employeeCount', 'Nombre d\\'employés')} *</FormLabel>\n                  <FormControl>\n                    <select\n                      {...form.register('employeeCount', { required: true })}\n                      className=\"flex h-10 w-full rounded-md border border-input bg-white dark:bg-gray-900 px-3 py-2 text-sm ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\"\n                    >\n                      <option value=\"\">{t('onboarding.company.basicInfo.selectEmployeeCount', 'Sélectionnez une tranche')}</option>\n                      {employeeCounts.map((count) => (\n                        <option key={count.value} value={count.value}>\n                          {count.label}\n                        </option>\n                      ))}\n                    </select>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              </CardContent>\n            </Card>\n          </motion.div>\n\n          {/* Marché et localisation */}\n          <motion.div variants={itemVariants}>\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Globe className=\"w-5 h-5\" />\n                  <span>{t('onboarding.company.location.title', 'Marché et localisation')}</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <FormItem>\n                  <FormLabel>{t('onboarding.company.location.market', 'Marché principal')} *</FormLabel>\n                  <FormControl>\n                    <select\n                      {...form.register('marketId', { required: true })}\n                      className=\"flex h-10 w-full rounded-md border border-input bg-white dark:bg-gray-900 px-3 py-2 text-sm ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\"\n                    >\n                      <option value=\"\">{t('onboarding.company.location.selectMarket', 'Sélectionnez un marché')}</option>\n                      {markets.map((market) => (\n                        <option key={market.id} value={market.id}>\n                          {market.name} ({market.defaultCurrency})\n                        </option>\n                      ))}\n                    </select>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n\n                <FormItem>\n                  <FormLabel>{t('onboarding.company.location.country', 'Pays')} *</FormLabel>\n                  <FormControl>\n                    <Input\n                      {...form.register('country', { required: true })}\n                      placeholder={t('onboarding.company.location.countryPlaceholder', 'France')}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n\n                <FormItem>\n                  <FormLabel>{t('onboarding.company.location.city', 'Ville')} *</FormLabel>\n                  <FormControl>\n                    <Input\n                      {...form.register('city', { required: true })}\n                      placeholder={t('onboarding.company.location.cityPlaceholder', 'Paris')}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n\n                {/* Informations du marché sélectionné */}\n                {selectedMarket && (\n                  <motion.div\n                    initial={{ opacity: 0, height: 0 }}\n                    animate={{ opacity: 1, height: 'auto' }}\n                    className=\"mt-4 p-4 bg-blue-50 dark:bg-blue-900 rounded-lg\"\n                  >\n                    <h4 className=\"font-medium text-blue-900 dark:text-blue-100 mb-2\">\n                      {t('onboarding.company.location.marketInfo', 'Informations du marché')}\n                    </h4>\n                    <div className=\"text-sm text-blue-800 dark:text-blue-200 space-y-1\">\n                      <p><strong>{t('onboarding.company.location.currency', 'Devise')}:</strong> {selectedMarket.defaultCurrency}</p>\n                      <p><strong>{t('onboarding.company.location.accounting', 'Norme comptable')}:</strong> {selectedMarket.accountingStandard}</p>\n                      <p><strong>{t('onboarding.company.location.vat', 'TVA')}:</strong> {selectedMarket.taxSystem.vatRate}%</p>\n                    </div>\n                  </motion.div>\n                )}\n              </CardContent>\n            </Card>\n          </motion.div>\n\n          {/* Informations légales */}\n          <motion.div variants={itemVariants}>\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Hash className=\"w-5 h-5\" />\n                  <span>{t('onboarding.company.legal.title', 'Informations légales')}</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <FormItem>\n                  <FormLabel>{t('onboarding.company.legal.vatNumber', 'Numéro de TVA')}</FormLabel>\n                  <FormControl>\n                    <Input\n                      {...form.register('vatNumber')}\n                      placeholder={selectedMarket?.taxSystem?.vatNumber ? `${selectedMarket.taxSystem.vatNumber}123456789` : 'FR12345678901'}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n\n                <FormItem>\n                  <FormLabel>{t('onboarding.company.legal.sirenNumber', 'Numéro SIREN/SIRET')}</FormLabel>\n                  <FormControl>\n                    <Input\n                      {...form.register('sirenNumber')}\n                      placeholder=\"123 456 789 00012\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n\n                <FormItem>\n                  <FormLabel>{t('onboarding.company.legal.website', 'Site web')}</FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n                      <Input\n                        {...form.register('website')}\n                        type=\"url\"\n                        placeholder=\"https://mon-entreprise.com\"\n                      />\n                      <ExternalLink className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              </CardContent>\n            </Card>\n          </motion.div>\n\n          {/* Aperçu */}\n          <motion.div variants={itemVariants}>\n            <Card className=\"bg-gradient-to-r from-green-50 to-blue-50 dark:from-green-900 dark:to-blue-900\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Users className=\"w-5 h-5\" />\n                  <span>{t('onboarding.company.preview.title', 'Aperçu')}</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                      {t('onboarding.company.preview.description', 'Votre entreprise sera configurée avec les paramètres suivants :')}\n                    </p>\n                  </div>\n                  \n                  {selectedMarket && (\n                    <div className=\"bg-white dark:bg-gray-800 p-3 rounded-lg text-sm\">\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        <div><strong>{t('onboarding.company.preview.currency', 'Devise')}:</strong> {selectedMarket.defaultCurrency}</div>\n                        <div><strong>{t('onboarding.company.preview.timezone', 'Fuseau')}:</strong> {selectedMarket.localization.timezone}</div>\n                        <div><strong>{t('onboarding.company.preview.dateFormat', 'Format date')}:</strong> {selectedMarket.localization.dateFormat}</div>\n                        <div><strong>{t('onboarding.company.preview.numberFormat', 'Format nombre')}:</strong> {selectedMarket.localization.numberFormat}</div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n\n        <motion.div\n          variants={itemVariants}\n          className=\"mt-8 text-center\"\n        >\n          <Button\n            type=\"submit\"\n            disabled={saving}\n            className=\"px-8 py-3 bg-blue-600 hover:bg-blue-700\"\n          >\n            {saving ? t('onboarding.company.saving', 'Sauvegarde...') : t('onboarding.company.continue', 'Continuer')}\n          </Button>\n        </motion.div>\n      </Form>\n    </motion.div>\n  );\n};\n\nexport default CompanyStep;