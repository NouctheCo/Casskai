import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { useTranslation } from 'react-i18next';\nimport { \n  BookOpen, \n  Calculator, \n  CreditCard, \n  TrendingUp, \n  Users, \n  FileText, \n  PieChart, \n  Shield,\n  Play,\n  Check,\n  ChevronRight,\n  ExternalLink\n} from 'lucide-react';\n\nimport { Card, CardContent, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\n\nconst FeaturesStep = ({ onNext }) => {\n  const { t } = useTranslation();\n  const [selectedFeature, setSelectedFeature] = useState(null);\n  const [completedFeatures, setCompletedFeatures] = useState([]);\n\n  const features = [\n    {\n      id: 'accounting',\n      icon: Calculator,\n      title: t('onboarding.features.accounting.title', 'Comptabilité'),\n      description: t('onboarding.features.accounting.description', 'Gérez vos écritures comptables et votre plan de comptes'),\n      color: 'text-blue-600',\n      bgColor: 'bg-blue-100',\n      gradientFrom: 'from-blue-500',\n      gradientTo: 'to-blue-700',\n      details: [\n        t('onboarding.features.accounting.detail1', 'Saisie d\\'écritures comptables'),\n        t('onboarding.features.accounting.detail2', 'Plan comptable personnalisable'),\n        t('onboarding.features.accounting.detail3', 'Journaux automatiques'),\n        t('onboarding.features.accounting.detail4', 'Balance et grand-livre')\n      ],\n      quickStart: t('onboarding.features.accounting.quickStart', 'Créer votre première écriture comptable')\n    },\n    {\n      id: 'invoicing',\n      icon: FileText,\n      title: t('onboarding.features.invoicing.title', 'Facturation'),\n      description: t('onboarding.features.invoicing.description', 'Créez et gérez vos factures clients'),\n      color: 'text-green-600',\n      bgColor: 'bg-green-100',\n      gradientFrom: 'from-green-500',\n      gradientTo: 'to-green-700',\n      details: [\n        t('onboarding.features.invoicing.detail1', 'Factures personnalisées'),\n        t('onboarding.features.invoicing.detail2', 'Devis et pro-forma'),\n        t('onboarding.features.invoicing.detail3', 'Suivi des paiements'),\n        t('onboarding.features.invoicing.detail4', 'Relances automatiques')\n      ],\n      quickStart: t('onboarding.features.invoicing.quickStart', 'Créer votre première facture')\n    },\n    {\n      id: 'expenses',\n      icon: CreditCard,\n      title: t('onboarding.features.expenses.title', 'Achats'),\n      description: t('onboarding.features.expenses.description', 'Gérez vos fournisseurs et factures d\\'achat'),\n      color: 'text-purple-600',\n      bgColor: 'bg-purple-100',\n      gradientFrom: 'from-purple-500',\n      gradientTo: 'to-purple-700',\n      details: [\n        t('onboarding.features.expenses.detail1', 'Factures fournisseurs'),\n        t('onboarding.features.expenses.detail2', 'Commandes d\\'achat'),\n        t('onboarding.features.expenses.detail3', 'Suivi des livraisons'),\n        t('onboarding.features.expenses.detail4', 'Gestion des stocks')\n      ],\n      quickStart: t('onboarding.features.expenses.quickStart', 'Enregistrer une facture fournisseur')\n    },\n    {\n      id: 'reports',\n      icon: PieChart,\n      title: t('onboarding.features.reports.title', 'Rapports'),\n      description: t('onboarding.features.reports.description', 'Analysez vos performances avec des rapports détaillés'),\n      color: 'text-orange-600',\n      bgColor: 'bg-orange-100',\n      gradientFrom: 'from-orange-500',\n      gradientTo: 'to-orange-700',\n      details: [\n        t('onboarding.features.reports.detail1', 'Bilan et compte de résultat'),\n        t('onboarding.features.reports.detail2', 'Tableaux de bord'),\n        t('onboarding.features.reports.detail3', 'Analyses de rentabilité'),\n        t('onboarding.features.reports.detail4', 'Exports personnalisés')\n      ],\n      quickStart: t('onboarding.features.reports.quickStart', 'Voir votre premier tableau de bord')\n    },\n    {\n      id: 'team',\n      icon: Users,\n      title: t('onboarding.features.team.title', 'Équipe'),\n      description: t('onboarding.features.team.description', 'Collaborez avec votre équipe et gérez les accès'),\n      color: 'text-pink-600',\n      bgColor: 'bg-pink-100',\n      gradientFrom: 'from-pink-500',\n      gradientTo: 'to-pink-700',\n      details: [\n        t('onboarding.features.team.detail1', 'Invitations d\\'équipe'),\n        t('onboarding.features.team.detail2', 'Rôles et permissions'),\n        t('onboarding.features.team.detail3', 'Suivi des activités'),\n        t('onboarding.features.team.detail4', 'Collaboration en temps réel')\n      ],\n      quickStart: t('onboarding.features.team.quickStart', 'Inviter votre premier collaborateur')\n    },\n    {\n      id: 'security',\n      icon: Shield,\n      title: t('onboarding.features.security.title', 'Sécurité'),\n      description: t('onboarding.features.security.description', 'Protégez vos données avec des mesures de sécurité avancées'),\n      color: 'text-red-600',\n      bgColor: 'bg-red-100',\n      gradientFrom: 'from-red-500',\n      gradientTo: 'to-red-700',\n      details: [\n        t('onboarding.features.security.detail1', 'Authentification à deux facteurs'),\n        t('onboarding.features.security.detail2', 'Chiffrement des données'),\n        t('onboarding.features.security.detail3', 'Sauvegardes automatiques'),\n        t('onboarding.features.security.detail4', 'Conformité RGPD')\n      ],\n      quickStart: t('onboarding.features.security.quickStart', 'Activer l\\'authentification à deux facteurs')\n    }\n  ];\n\n  const handleFeatureClick = (feature) => {\n    setSelectedFeature(selectedFeature?.id === feature.id ? null : feature);\n  };\n\n  const handleMarkAsCompleted = (featureId) => {\n    if (!completedFeatures.includes(featureId)) {\n      setCompletedFeatures([...completedFeatures, featureId]);\n    }\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: { staggerChildren: 0.1 }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0 }\n  };\n\n  return (\n    <motion.div\n      variants={containerVariants}\n      initial=\"hidden\"\n      animate=\"visible\"\n      className=\"max-w-6xl mx-auto\"\n    >\n      <motion.div variants={itemVariants} className=\"text-center mb-12\">\n        <div className=\"flex justify-center mb-4\">\n          <div className=\"bg-indigo-100 dark:bg-indigo-900 p-3 rounded-full\">\n            <BookOpen className=\"w-8 h-8 text-indigo-600 dark:text-indigo-400\" />\n          </div>\n        </div>\n        <h2 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">\n          {t('onboarding.features.title', 'Découvrez les fonctionnalités de CassKai')}\n        </h2>\n        <p className=\"text-xl text-gray-600 dark:text-gray-300 mb-8 max-w-3xl mx-auto\">\n          {t('onboarding.features.description', 'Explorez les outils puissants qui vont transformer la gestion de votre entreprise')}\n        </p>\n        \n        <div className=\"flex justify-center items-center space-x-4 mb-8\">\n          <div className=\"flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400\">\n            <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n            <span>{t('onboarding.features.progress', 'Progression')}: {completedFeatures.length}/{features.length}</span>\n          </div>\n          <div className=\"flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400\">\n            <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\n            <span>{t('onboarding.features.optional', 'Optionnel - Explorez à votre rythme')}</span>\n          </div>\n        </div>\n      </motion.div>\n\n      {/* Grille des fonctionnalités */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12\">\n        {features.map((feature, index) => {\n          const Icon = feature.icon;\n          const isSelected = selectedFeature?.id === feature.id;\n          const isCompleted = completedFeatures.includes(feature.id);\n          \n          return (\n            <motion.div\n              key={feature.id}\n              variants={itemVariants}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              className=\"group\"\n            >\n              <Card \n                className={`cursor-pointer transition-all duration-300 ${\n                  isSelected \n                    ? 'ring-2 ring-blue-500 shadow-lg' \n                    : 'hover:shadow-md border-2 border-transparent hover:border-blue-200 dark:hover:border-blue-700'\n                } ${\n                  isCompleted ? 'bg-green-50 dark:bg-green-900 border-green-200 dark:border-green-700' : ''\n                }`}\n                onClick={() => handleFeatureClick(feature)}\n              >\n                <CardHeader className=\"pb-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`p-2 rounded-lg ${feature.bgColor} dark:bg-opacity-20 transition-all duration-300 ${isSelected ? 'scale-110' : ''}`}>\n                        <Icon className={`w-5 h-5 ${feature.color}`} />\n                      </div>\n                      <CardTitle className=\"text-lg\">{feature.title}</CardTitle>\n                    </div>\n                    {isCompleted && (\n                      <div className=\"bg-green-500 text-white p-1 rounded-full\">\n                        <Check className=\"w-4 h-4\" />\n                      </div>\n                    )}\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-3\">\n                    {feature.description}\n                  </p>\n                  \n                  <div className=\"flex items-center text-blue-600 dark:text-blue-400 text-sm font-medium\">\n                    <span>{t('onboarding.features.explore', 'Explorer')}</span>\n                    <ChevronRight className=\"w-4 h-4 ml-1\" />\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          );\n        })}\n      </div>\n\n      {/* Détails de la fonctionnalité sélectionnée */}\n      {selectedFeature && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, y: -20 }}\n          className=\"mb-8\"\n        >\n          <Card className=\"border-2 border-blue-200 dark:border-blue-700\">\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`p-3 rounded-lg bg-gradient-to-r ${selectedFeature.gradientFrom} ${selectedFeature.gradientTo}`}>\n                    <selectedFeature.icon className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div>\n                    <CardTitle className=\"text-xl\">{selectedFeature.title}</CardTitle>\n                    <p className=\"text-gray-600 dark:text-gray-300 text-sm\">\n                      {selectedFeature.description}\n                    </p>\n                  </div>\n                </div>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setSelectedFeature(null)}\n                >\n                  {t('onboarding.features.close', 'Fermer')}\n                </Button>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                <div>\n                  <h4 className=\"font-semibold text-gray-900 dark:text-white mb-4\">\n                    {t('onboarding.features.capabilities', 'Fonctionnalités principales')}\n                  </h4>\n                  <ul className=\"space-y-3\">\n                    {selectedFeature.details.map((detail, index) => (\n                      <li key={index} className=\"flex items-start space-x-3\">\n                        <div className=\"bg-green-100 dark:bg-green-900 p-1 rounded-full mt-0.5\">\n                          <Check className=\"w-3 h-3 text-green-600 dark:text-green-400\" />\n                        </div>\n                        <span className=\"text-gray-700 dark:text-gray-300 text-sm\">{detail}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-semibold text-gray-900 dark:text-white mb-4\">\n                    {t('onboarding.features.getStarted', 'Commencer')}\n                  </h4>\n                  <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n                    <div className=\"flex items-center space-x-3 mb-3\">\n                      <div className=\"bg-blue-100 dark:bg-blue-900 p-2 rounded-full\">\n                        <Play className=\"w-4 h-4 text-blue-600 dark:text-blue-400\" />\n                      </div>\n                      <span className=\"font-medium text-gray-900 dark:text-white\">\n                        {t('onboarding.features.quickStart', 'Démarrage rapide')}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-300 mb-4\">\n                      {selectedFeature.quickStart}\n                    </p>\n                    <div className=\"flex space-x-2\">\n                      <Button \n                        size=\"sm\" \n                        className={`bg-gradient-to-r ${selectedFeature.gradientFrom} ${selectedFeature.gradientTo}`}\n                        onClick={() => handleMarkAsCompleted(selectedFeature.id)}\n                        disabled={completedFeatures.includes(selectedFeature.id)}\n                      >\n                        {completedFeatures.includes(selectedFeature.id) ? (\n                          <><Check className=\"w-4 h-4 mr-2\" /> {t('onboarding.features.completed', 'Terminé')}</>\n                        ) : (\n                          <><Play className=\"w-4 h-4 mr-2\" /> {t('onboarding.features.tryIt', 'Essayer')}</>\n                        )}\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\">\n                        <ExternalLink className=\"w-4 h-4 mr-2\" />\n                        {t('onboarding.features.learnMore', 'En savoir plus')}\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n      )}\n\n      {/* Conseils pour bien commencer */}\n      <motion.div variants={itemVariants}>\n        <Card className=\"bg-gradient-to-r from-indigo-50 to-purple-50 dark:from-indigo-900 dark:to-purple-900\">\n          <CardHeader>\n            <CardTitle className=\"text-center\">\n              {t('onboarding.features.tips.title', 'Conseils pour bien commencer')}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 text-center\">\n              <div>\n                <div className=\"bg-blue-100 dark:bg-blue-900 p-3 rounded-full w-12 h-12 mx-auto mb-3\">\n                  <TrendingUp className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\n                  {t('onboarding.features.tips.step1.title', 'Commencez simple')}\n                </h3>\n                <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                  {t('onboarding.features.tips.step1.description', 'Explorez d\\'abord la comptabilité et la facturation')}\n                </p>\n              </div>\n              \n              <div>\n                <div className=\"bg-green-100 dark:bg-green-900 p-3 rounded-full w-12 h-12 mx-auto mb-3\">\n                  <Users className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\n                  {t('onboarding.features.tips.step2.title', 'Invitez votre équipe')}\n                </h3>\n                <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                  {t('onboarding.features.tips.step2.description', 'Collaborez dès le début pour plus d\\'efficacité')}\n                </p>\n              </div>\n              \n              <div>\n                <div className=\"bg-purple-100 dark:bg-purple-900 p-3 rounded-full w-12 h-12 mx-auto mb-3\">\n                  <Shield className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\n                  {t('onboarding.features.tips.step3.title', 'Sécurisez vos données')}\n                </h3>\n                <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                  {t('onboarding.features.tips.step3.description', 'Activez la sécurité avancée pour protéger vos informations')}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </motion.div>\n\n      {/* Bouton pour continuer */}\n      <motion.div\n        variants={itemVariants}\n        className=\"text-center mt-12\"\n      >\n        <div className=\"mb-4\">\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n            {t('onboarding.features.optional', 'Cette étape est optionnelle. Vous pouvez revenir explorer ces fonctionnalités à tout moment.')}\n          </p>\n        </div>\n        \n        <Button\n          onClick={onNext}\n          size=\"lg\"\n          className=\"bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white px-8 py-3\"\n        >\n          {t('onboarding.features.continue', 'Continuer vers l\\'étape finale')}\n        </Button>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default FeaturesStep;